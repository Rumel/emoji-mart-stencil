/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  Category as EmartCategory
} from './components/category/category';

declare global {
  interface HTMLEmartCategoryElement extends EmartCategory, HTMLElement {
  }
  var HTMLEmartCategoryElement: {
    prototype: HTMLEmartCategoryElement;
    new (): HTMLEmartCategoryElement;
  };
  interface HTMLElementTagNameMap {
    "emart-category": HTMLEmartCategoryElement;
  }
  interface ElementTagNameMap {
    "emart-category": HTMLEmartCategoryElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "emart-category": JSXElements.EmartCategoryAttributes;
    }
  }
  namespace JSXElements {
    export interface EmartCategoryAttributes extends HTMLAttributes {
      categoryId?: any;
      categoryKey?: any;
      categoryLoaded?: any;
      custom?: any;
      emojiProps?: any;
      emojis?: any;
      hasStickyPosition?: boolean;
      i18n?: any;
      name?: string;
      native?: boolean;
      perLine?: number;
      recent?: string[];
    }
  }
}


import {
  Picker as EmartPicker
} from './components/picker/picker';

declare global {
  interface HTMLEmartPickerElement extends EmartPicker, HTMLElement {
  }
  var HTMLEmartPickerElement: {
    prototype: HTMLEmartPickerElement;
    new (): HTMLEmartPickerElement;
  };
  interface HTMLElementTagNameMap {
    "emart-picker": HTMLEmartPickerElement;
  }
  interface ElementTagNameMap {
    "emart-picker": HTMLEmartPickerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "emart-picker": JSXElements.EmartPickerAttributes;
    }
  }
  namespace JSXElements {
    export interface EmartPickerAttributes extends HTMLAttributes {
      autoFocus?: boolean;
      backgroundImageFn?: any;
      color?: string;
      custom?: any;
      emoji?: string;
      emojiSize?: number;
      emojisToShowFilter?: any;
      emojiTooltip?: any;
      exclude?: any;
      i18n?: any;
      include?: any;
      native?: any;
      onEmojiClicked?: any;
      perLine?: number;
      pickerStyle?: any;
      recent?: any;
      set?: string;
      sheetSize?: any;
      showAnchors?: boolean;
      showPreview?: boolean;
      skin?: any;
      title?: string;
      width?: string;
    }
  }
}

